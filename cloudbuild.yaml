# Cloud Build Configuration which:
steps:
- name: 'gcr.io/cloud-builders/gcloud'
  id: terraform-google-initialize
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # create this resource if TPU, MIG is not specified
    if [[ ${_BUILD_ACTION} == "initialize" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]] 
    then
      gcloud builds submit --config=./env_setup/initialize/initialize.yaml 
      wait
    # skip in all other conditions
    fi

- name: 'gcr.io/cloud-builders/gcloud'
  id: terraform-google-disk
  entrypoint: 'bash'
  timeout: 4000s
  args:
  - '-c'
  - |
    # create this resource if TPU, MIG is not specified
    if [[ ${_BUILD_ACTION} == "update" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "true" ]] 
    then
      gcloud builds submit --config=./env_setup/terraform-google-disk/terraform-google-disk.yaml 
      wait
    # update this resource if TPU is not specified
    elif [[ ${_BUILD_ACTION} == "update" && ${_TPU} == "default" && ${_MIG} == "true" && ${_DISK} == "true" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-disk/terraform-google-disk.yaml 
      wait 
    # destroy the disk resource 
    elif [[ ${_BUILD_ACTION} == "destroy" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "true" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-disk/terraform-google-disk-destroy.yaml
      wait
    # skip in all other conditions
    fi

# Create GCS Buckets
- name: 'gcr.io/cloud-builders/gcloud'
  id: terraform-google-gcs
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # destroy this resource if TPU, MIG is not specified
    if [[ ${_BUILD_ACTION} == "destroy" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]] 
    then
      gcloud builds submit --config=./env_setup/terraform-google-gcs/terraform-google-gcs.yaml --substitutions _BUILD_ACTION=destroy
      wait 
    # skip in all other conditions
    fi 

# CREATE filestore
- name: 'gcr.io/cloud-builders/gcloud'
  id: terraform-google-filestore
  waitFor:
  - terraform-google-gcs
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # create this resource if TPU, MIG is not specified
    if [[ ${_BUILD_ACTION} == "create" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]] 
    then
      gcloud builds submit --config=./env_setup/terraform-google-filestore/terraform-google-filestore.yaml --substitutions _BUILD_ACTION=create
      wait
    # destroy this resource if TPU, MIG is not specified
    elif [[ ${_BUILD_ACTION} == "destroy" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-filestore/terraform-google-filestore.yaml --substitutions _BUILD_ACTION=destroy
      wait 
    # skip in all other conditions
    fi 

# Create CLOUD TPU 
- name: 'gcr.io/cloud-builders/gcloud'
  id: terraform-google-tpu
  timeout: 4000s
  waitFor:
    - terraform-google-gcs
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # create this resource if TPU is specified
    if [[ ${_BUILD_ACTION} == "update"  &&  ${_TPU} == "true" ]] || [[ ${_BUILD_ACTION} == "create" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-tpu/terraform-google-tpu.yaml --substitutions _BUILD_ACTION=create
      wait
    # destroy this resource if TPU specified
    elif [[ ${_BUILD_ACTION} == "destroy"  &&  ${_TPU} == "true" ]] || [[ ${_BUILD_ACTION} == "destroy" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-tpu/terraform-google-tpu.yaml --substitutions _BUILD_ACTION=destroy
      wait 
    # skip in all other conditions
    fi 

# Create MIG
- name: 'gcr.io/cloud-builders/gcloud'
  id: terraform-google-mig
  waitFor:
    - terraform-google-filestore
    - terraform-google-disk
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # create this resource if MIG is specified
    if [[ ${_BUILD_ACTION} == "update"  &&  ${_MIG} == "true" ]] || [[ ${_BUILD_ACTION} == "create" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-mig/terraform-google-mig-create.yaml 
      wait
    # destroy this resource if MIG specified
    elif [[ ${_BUILD_ACTION} == "destroy"  &&  ${_MIG} == "true" ]] || [[ ${_BUILD_ACTION} == "destroy" && ${_TPU} == "default" && ${_MIG} == "default" && ${_DISK} == "default" ]]
    then
      gcloud builds submit --config=./env_setup/terraform-google-mig/terraform-google-mig-destroy.yaml
      wait 
    # skip in all other conditions
    fi 

substitutions:
    _BUILD_ACTION: default
    _TPU: default
    _MIG: default
    _DISK: default 
timeout: 6000s


# TODO: Ability to set TPU Runtime when specified 

# TODO: Cloud build to refresh instances based on changes to github

# TODO: CLoud build TF to turn off enviroment and save data to GCS bucket, 

# TODO: add ability to trigger changes, watching the github checkin 



