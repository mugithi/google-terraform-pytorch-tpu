steps:
- id: terraform-google-gcs
  name: gcr.io/$PROJECT_ID/terraform:0.12.16
  entrypoint: 'sh'
  args: 
  - '-c'
  - |  
      # set -xe
      source values.env
      source values.env.auto
      function cleanup {
          if [ "$?" == "0" ]
          then 
            echo -e "$${GREEN}Succeeded in deleting the environment $${NC}"
          else 
            echo -e "$${RED}Did not succeed in deleting the enviroment $${NC}"
            exit 0
          fi
      }
      trap cleanup EXIT
      if [ ${_BUILD_ACTION} == 'destroy' ]
      then
        cd env_setup/terraform-google-gcs  
        terraform init \
            -var="project_id=$${PROJECT_ID}" \
            -var="gcs_tf_backend=$${PROJECT_ID}-$${ENV_BUILD_NAME}-tf-backend" \
            -var="gcs_workspace=$${PROJECT_ID}-$${ENV_BUILD_NAME}-workspace" \
            -var="gcs_dataset=$${PROJECT_ID}-$${ENV_BUILD_NAME}-dataset"
        terraform destroy -auto-approve \
            -var="project_id=$${PROJECT_ID}" \
            -var="gcs_tf_backend=$${PROJECT_ID}-$${ENV_BUILD_NAME}-tf-backend" \
            -var="gcs_workspace=$${PROJECT_ID}-$${ENV_BUILD_NAME}-workspace" \
            -var="gcs_dataset=$${PROJECT_ID}-$${ENV_BUILD_NAME}-dataset" 
      fi 
