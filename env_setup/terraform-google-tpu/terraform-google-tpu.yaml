steps:
# Create tpu Buckets
- id: terraform-google-tpu
  name: gcr.io/$PROJECT_ID/terraform:0.12.16
  entrypoint: 'sh'
  args: 
  - '-c'
  - |  
      # set -xe
      source values.env
      source values.env.auto
      function cleanup {
          if [ "$?" == "0" ]
          then
            echo -e "$${GREEN}Succeeded with $${ENV_BUILD_NAME}-tpu build operations $${NC}"
          else 
            echo -e "$${RED}Did not succeed with $${ENV_BUILD_NAME}-tpu build operations $${NC}"
            exit 0
          fi
      }
      trap cleanup EXIT
      if [ ${_BUILD_ACTION} == 'create' ]
      then
         cd env_setup/terraform-google-tpu
         terraform init \
            -backend-config="bucket=$${PROJECT_ID}-$${ENV_BUILD_NAME}-tf-backend" \
            -backend-config="prefix=terraform-google-$${ENV_BUILD_NAME}-tpu"
         terraform apply --auto-approve \
            -var="project_id=$${PROJECT_ID}" \
            -var="region=$${REGION}" \
            -var="zone=$${ZONE}" \
            -var="tpu_name=$${ENV_BUILD_NAME}-tpu" \
            -var="accelerator_type=$${TPU_ACCELERATOR_TYPE}" \
            -var="cidr_block=$${TPU_CIDR_BLOCK}" \
            -var="pytorch_version=$${TPU_PYTORCH_VERSION}" 
      fi 
      if [ ${_BUILD_ACTION} == 'destroy' ]
      then
         cd env_setup/terraform-google-tpu
         terraform init \
            -backend-config="bucket=$${PROJECT_ID}-$${ENV_BUILD_NAME}-tf-backend" \
            -backend-config="prefix=terraform-google-$${ENV_BUILD_NAME}-tpu"
        terraform destroy --auto-approve \
            -var="project_id=$${PROJECT_ID}" \
            -var="region=$${REGION}" \
            -var="zone=$${ZONE}" \
            -var="tpu_name=$${ENV_BUILD_NAME}-tpu" \
            -var="accelerator_type=$${TPU_ACCELERATOR_TYPE}" \
            -var="cidr_block=$${TPU_CIDR_BLOCK}" \
            -var="pytorch_version=$${TPU_PYTORCH_VERSION}" 
      fi
- id: tpu-runtime-version
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  timeout: 4000s
  args:
  - '-c'
  - |
      if [ ${_BUILD_ACTION} == 'create' ]
      then 
         source values.env
         source values.env.auto
         function cleanup {
            if [ "$?" == "0" ]
            then
               echo -e "$${GREEN}Succeeded in changing the Cloud TPU runtime to $${GCE_IMAGE_VERSION} $${NC}"
            else 
               echo -e "$${RED}Did not succeed in changing the Cloud TPU runtime to $${GCE_IMAGE_VERSION} $${NC}"
               exit 0
            fi
         }
         # Change TPU runtime if CLOUD TPU is spefified 
         if [[ "$${TPU_PYTORCH_VERSION}" == "pytorch-nightly" && ! -z "$${GCE_IMAGE_VERSION}" ]]
         then 
            echo -e "$${GREEN}Changing the Cloud TPU runtime to $${GCE_IMAGE_VERSION} $${NC}"
            gcloud builds submit --config=./env_setup/terraform-google-tpu/tpu-runtime/terraform-google-tpu-runtime.yaml
         fi
      fi 
timeout: 4000s